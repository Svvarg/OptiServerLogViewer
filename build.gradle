apply plugin: 'java'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.swarg.mc.optistats.Viewer'
}

version = "0.3"
group = "org.swarg.mc.optistats"
archivesBaseName = "OptSrvLogViewer"


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.swarg.cmds:cmds4j:0.2'
    compile 'org.swarg.common:alib:0.2.5'
    compile 'org.jfree:jfreechart:1.5.0'
    compile 'org.swarg.mcforge:mcfbackendlib:0.6.2'
    //compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    //compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

jar {
    manifest {
        attributes (
            'Main-Class'     : 'org.swarg.mc.optistats.Viewer',
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Implementation-Version': "$version" 
        )
    }
    //for include class files  defined in include_classes.txt from dependencies
    //jars to artifact-jar
    def includedlist = project.file('include_classes.txt').readLines()
    //Exception of the case when the entire class files from all dependencies 
    //would be added with the empty includedlist
    if (includedlist != null && includedlist.size() > 0) {
        from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
            include includedlist;
        }
    }
}

// Use AbstractAppConfig with Runtime Dependency loading
//task customFatJar(type: Jar) {
//    manifest {
//        attributes (
//            'Main-Class'     : 'org.swarg.mc.optistats.Viewer',
//            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
//            'Implementation-Version': "$version" 
//        );
//    }
//    baseName = 'logviewer'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}
//-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9009 
